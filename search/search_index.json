{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"D\u00e9ploiement de DeepSeek sur OpenShift","text":""},{"location":"#prerequis","title":"Pr\u00e9requis","text":"<p>Avant de commencer, assurez-vous de remplir les conditions suivantes :</p> <ul> <li>\u00catre en mesure de se connecter \u00e0 un cluster OpenShift.</li> <li>Pouvoir cr\u00e9er un namespace sur OpenShift.</li> <li>Avoir les privil\u00e8ges administrateur sur ce namespace.</li> <li>Cloner le d\u00e9p\u00f4t suivant pour disposer des fichiers n\u00e9cessaires :</li> </ul> <pre><code>git clone https://github.com/neutron-IT-organization/deepseek-openshift.git\n</code></pre>"},{"location":"#1-creer-un-namespace-deepseek","title":"1. Cr\u00e9er un Namespace deepseek","text":"<p>Pour commencer, cr\u00e9ez un namespace d\u00e9di\u00e9 \u00e0 DeepSeek sur OpenShift :</p> <pre><code>oc create namespace deepseek\n</code></pre>"},{"location":"#2-configurez-les-scc","title":"2. COnfigurez les SCC","text":"<p>Attribuez la SCC (Security Context Constraint) <code>privileged</code> au service account ci-dessous dans le namespace <code>deepseek</code> :</p> <pre><code>oc adm policy add-scc-to-user privileged -z default -n deepseek\noc adm policy add-scc-to-user privileged -z dify-redis -n deepseek\noc adm policy add-scc-to-user privileged -z dify-postgres -n deepseek\noc adm policy add-scc-to-user privileged -z dify-weaviate -n deepseek\n</code></pre>"},{"location":"#3-installer-le-deploiement-dollama","title":"3. Installer le d\u00e9ploiement d'Ollama","text":"<p>D\u00e9ployez le manifest manifest/ollama.yaml dans le namespace <code>deepseek</code> avec le fichier de configuration suivant :</p> <pre><code>apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ollama\n  namespace: deepseek\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ollama\n  template:\n    metadata:\n      labels:\n        app: ollama\n    spec:\n      securityContext:\n        runAsUser: 0\n      containers:\n        - name: ollama\n          image: ollama/ollama:latest\n          ports:\n            - containerPort: 11434\n              protocol: TCP\n          resources: {}\n      restartPolicy: Always\n      terminationGracePeriodSeconds: 30\n      dnsPolicy: ClusterFirst\n</code></pre> <p>Appliquez cette configuration avec la commande suivante :</p> <pre><code>oc apply -f manifest/ollama.yaml\n</code></pre>"},{"location":"#4-executer-deepseek-v2-dans-ollama","title":"4. Ex\u00e9cuter deepseek-v2 dans ollama","text":"<p>Acc\u00e9dez \u00e0 l'onglet Workloads &gt; Pods.</p> <p>Recherchez le pod ollama dans le namespace deepseek.</p> <p>Cliquez dessus, puis allez dans l'onglet Terminal.</p> <p>Ex\u00e9cutez la commande suivante directement dans le terminal du pod :</p> <p>Une fois le d\u00e9ploiement d'Ollama effectu\u00e9, ex\u00e9cutez la commande suivante \u00e0 l'int\u00e9rieur du pod pour lancer <code>deepseek-v2</code> :</p> <pre><code>ollama run deepseek-v2\n</code></pre> <p></p>"},{"location":"#alternative-en-ligne-de-commande","title":"Alternative en ligne de commande","text":"<pre><code>oc exec -it &lt;pod-name&gt; -- ollama run deepseek-v2\n</code></pre> <p>Remplacez <code>&lt;pod-name&gt;</code> par le nom du pod Ollama que vous pouvez obtenir avec la commande <code>oc get pods</code>.</p>"},{"location":"#5-installer-dify-dans-le-namespace-deepseek","title":"5. Installer Dify dans le namespace <code>deepseek</code>","text":"<p>Ajoutez le repo Helm de Dify et installez-le dans le namespace <code>deepseek</code> :</p> <pre><code>oc apply -f manifest/dify.yaml\n</code></pre> <p></p>"},{"location":"#6-exposer-dify-avec-une-route","title":"6. Exposer Dify avec une Route","text":"<p>Enfin, exposez le service Dify via une route OpenShift pour rendre l'application accessible :</p> <pre><code>kind: Route\napiVersion: route.openshift.io/v1\nmetadata:\n  name: dify-route\n  namespace: deepseek\nspec:\n  path: /\n  to:\n    kind: Service\n    name: dify-nginx\n    weight: 100\n  port:\n    targetPort: dify-nginx\n  tls:\n    termination: edge\n  wildcardPolicy: None\n</code></pre> <p>Appliquez cette route avec la commande suivante :</p> <pre><code>oc apply -f manifest/dify-route.yaml\n</code></pre> <p>Vous pouvez maintenant acc\u00e9der a dify via la route. Pour la r\u00e9cup\u00e9rer utilisez la commande ci dessous </p> <pre><code>oc get route dify-route -n deepseek -o jsonpath='{.spec.host}'\n</code></pre>"},{"location":"#7-configuration-de-dify","title":"7. Configuration de dify","text":"<p>Lors de la premiere connextion a dify, le mot de passe administrateur vous sera demand\u00e9. Par d\u00e9faut celui-ci prend la valeur <code>password</code>.</p> <p></p> <p>Compl\u00e9tez ensuite le formulaire <code>Setting up an admin account</code> avec un user/password.</p> <p></p> <p>Vous devriez maintenant acc\u00e9der a l'interface Dify.</p> <p></p>"},{"location":"#8-create-deepseek-chatbot","title":"8. Create Deepseek chatbot","text":"<p>Dans un premier temps configurez le model deepseek. Pour cela cliquez sur votre nom en haut a droite puis sur Settings. Puis cliquez sur Model Provider.</p> <p></p> <p>Selectionnez ensuite Ollama et cliquez sur <code>+ Add Model</code></p> <p>Compl\u00e9tez le formulaire.</p> <p>Dans Model Name, indiquez le nom de votre model. Ici <code>deepseek-v2</code>. Dans Base URL ecrivez le nom du service ollama <code>http://ollama.deepseek.svc.cluster.local</code>.</p> <p></p> <p>NOTE: Rechargez ensuite votre page pour que le model soit bien pris en compte. Pour cela vous pouvez cliquez sur F5.</p> <p>Vous pouvez maintenant cr\u00e9er votre chatbot. Pour cela dans l'onglet Studio, cliquez sur Chatbot puis sur <code>+ Create from blank</code>.</p> <p>Donnez un nom a votre chatbot puis cliquez sur create.</p> <p></p> <p>Votre chatbot est des a present fonctionnel vous pouvez le tester en discantant dans la section <code>Talk to bot</code>.</p> <p></p>"},{"location":"#9-publier-deepseek-chatbot","title":"9. Publier Deepseek chatbot","text":"<p>Vous pouvez maintenant publier votre chatbot.</p> <p>Pour cela cliquez sur Publish. Penser a <code>update</code> votre chatbot. Cliquez sur Run App. </p> <p>NOTE: Selon la configuration de votre nginx, il est possible que l'url utilis\u00e9 soit dify-api:5001. Si c'est le cas remplacer dans l'url dify-api:5001 par votre route pour acc\u00e9der au chatbot.</p> <p></p>"},{"location":"#conclusion","title":"Conclusion","text":"<p>Vous avez maintenant d\u00e9ploy\u00e9 DeepSeek sur OpenShift. Vous pouvez acc\u00e9der \u00e0 l'application via la route expos\u00e9e et utiliser les diff\u00e9rents services qu'elle offre.</p>"}]}